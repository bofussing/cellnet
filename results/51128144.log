  ===  RUNNING  cellnet.py  ===  

0.06s - Debugger warning: It seems that frozen modules are being used, which may
0.00s - make the debugger miss breakpoints. Please pass -Xfrozen_modules=off
0.00s - to python to disable frozen modules.
0.00s - Note: Debugging will proceed. Set PYDEVD_DISABLE_FILE_VALIDATION=1 to disable this validation.
[jupytext] Reading cellnet.py in format py
[jupytext] Setting kernel python3
[jupytext] Updating notebook metadata with '{"kernelspec": {"name": "python3", "language": "python", "display_name": "Python 3 (ipykernel)"}}'
[jupytext] Executing notebook with kernel python3
Traceback (most recent call last):
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/bin/jupytext", line 10, in <module>
    sys.exit(jupytext())
             ^^^^^^^^^^
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/jupytext/cli.py", line 497, in jupytext
    exit_code += jupytext_single_file(nb_file, args, log)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/jupytext/cli.py", line 723, in jupytext_single_file
    exec_proc.preprocess(notebook, resources=resources)
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/nbconvert/preprocessors/execute.py", line 102, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/nbconvert/preprocessors/execute.py", line 123, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

def plot_predictions():
  for mi, m in enumerate(results.m.dropna()):
    m.eval()
    loader = mkLoader([1,2,4], 1, transforms=testaugs)

    def do(m, batch, ax=None):
      y = m(batch['image'].to(device))
      B = batch['image'], batch['masks'][0], y, batch['keypoints'] # keypoints2heatmap(**batch)
      
      for x,m,y,k in zip(*[cpu(v) for v in B]):
        ax = plot.image(x, ax=ax)
        ax.set_title(f'model {mi}')
        plot.heatmap(y, ax=ax, alpha=lambda x: x, color='#ff0000')
        plot.heatmap(m/1, ax=ax, alpha=lambda x: 0.15*x, color='#0000ff')
        
        ny = yunnorm(y).sum().item()
        nz = len(k)
        print(mi, ': ', nz, '/', ny, f"{int(100 - 100*abs(ny-nz)/nz)}%")

    for i in [1,2,4]:
      do(m, next(iter(loader)))

plot_predictions()
------------------

----- stderr -----
/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py:557: UserWarning: This DataLoader will create 48 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----

----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----

----- stderr -----
Traceback (most recent call last):
----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----

----- stderr -----
Traceback (most recent call last):
----- stderr -----
Traceback (most recent call last):
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----
self._shutdown_workers()
----- stderr -----
self._shutdown_workers()
----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----

----- stderr -----

----- stderr -----
self._shutdown_workers()
----- stderr -----
if w.is_alive():
----- stderr -----
if w.is_alive():
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
if w.is_alive():
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----

----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
AssertionError
----- stderr -----
^
----- stderr -----
:
----- stderr -----
^
----- stderr -----
^
----- stderr -----
can only test a child process
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
AssertionError
----- stderr -----
:
----- stderr -----
^
----- stderr -----
can only test a child process
----- stderr -----
^
----- stderr -----

----- stderr -----
AssertionError
----- stderr -----
:
----- stderr -----
can only test a child process
----- stderr -----

----- stderr -----

----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----
Exception ignored in:
----- stderr -----
<function _MultiProcessingDataLoaderIter.__del__ at 0x2b0545bcfec0>
----- stderr -----

----- stderr -----

----- stderr -----
Traceback (most recent call last):
----- stderr -----
Traceback (most recent call last):
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----

----- stderr -----

----- stderr -----
self._shutdown_workers()
----- stderr -----

----- stderr -----
self._shutdown_workers()
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----
Traceback (most recent call last):
----- stderr -----
if w.is_alive():
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1478, in __del__
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
if w.is_alive():
----- stderr -----

----- stderr -----

----- stderr -----
self._shutdown_workers()
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1461, in _shutdown_workers
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
if w.is_alive():
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
  File "/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/multiprocessing/process.py", line 160, in is_alive
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
assert self._parent_pid == os.getpid(), 'can only test a child process'
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
AssertionError
----- stderr -----
^
----- stderr -----
:
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
can only test a child process
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----
^
----- stderr -----

----- stderr -----

----- stderr -----
AssertionError
----- stderr -----
AssertionError
----- stderr -----
:
----- stderr -----
:
----- stderr -----
can only test a child process
----- stderr -----

----- stderr -----
can only test a child process
----- stderr -----

----- stderr -----
/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/IPython/core/events.py:82: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  func(*args, **kwargs)
----- stdout -----
Error in callback <function _draw_all_if_interactive at 0x2b0536f7e2a0> (for post_execute), with arguments args (),kwargs {}:
----- stderr -----
/gpfs/space/home/eckhardt/.micromamba/envs/cellnet/lib/python3.12/site-packages/IPython/core/pylabtools.py:152: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  fig.canvas.print_figure(bytes_io, **kw)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/IPython/core/formatters.py:343[0m, in [0;36mBaseFormatter.__call__[0;34m(self, obj)[0m
[1;32m    341[0m     [38;5;28;01mpass[39;00m
[1;32m    342[0m [38;5;28;01melse[39;00m:
[0;32m--> 343[0m     [38;5;28;01mreturn[39;00m [43mprinter[49m[43m([49m[43mobj[49m[43m)[49m
[1;32m    344[0m [38;5;66;03m# Finally look for special method names[39;00m
[1;32m    345[0m method [38;5;241m=[39m get_real_method(obj, [38;5;28mself[39m[38;5;241m.[39mprint_method)

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/IPython/core/pylabtools.py:152[0m, in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, base64, **kwargs)[0m
[1;32m    149[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_bases[39;00m [38;5;28;01mimport[39;00m FigureCanvasBase
[1;32m    150[0m     FigureCanvasBase(fig)
[0;32m--> 152[0m [43mfig[49m[38;5;241;43m.[39;49m[43mcanvas[49m[38;5;241;43m.[39;49m[43mprint_figure[49m[43m([49m[43mbytes_io[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m
[1;32m    153[0m data [38;5;241m=[39m bytes_io[38;5;241m.[39mgetvalue()
[1;32m    154[0m [38;5;28;01mif[39;00m fmt [38;5;241m==[39m [38;5;124m'[39m[38;5;124msvg[39m[38;5;124m'[39m:

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/backend_bases.py:2164[0m, in [0;36mFigureCanvasBase.print_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2161[0m     [38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`[39;00m
[1;32m   2162[0m     [38;5;66;03m# so that we can inject the orientation[39;00m
[1;32m   2163[0m     [38;5;28;01mwith[39;00m [38;5;28mgetattr[39m(renderer, [38;5;124m"[39m[38;5;124m_draw_disabled[39m[38;5;124m"[39m, nullcontext)():
[0;32m-> 2164[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   2165[0m [38;5;28;01mif[39;00m bbox_inches:
[1;32m   2166[0m     [38;5;28;01mif[39;00m bbox_inches [38;5;241m==[39m [38;5;124m"[39m[38;5;124mtight[39m[38;5;124m"[39m:

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/artist.py:95[0m, in [0;36m_finalize_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     93[0m [38;5;129m@wraps[39m(draw)
[1;32m     94[0m [38;5;28;01mdef[39;00m [38;5;21mdraw_wrapper[39m(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 95[0m     result [38;5;241m=[39m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     96[0m     [38;5;28;01mif[39;00m renderer[38;5;241m.[39m_rasterizing:
[1;32m     97[0m         renderer[38;5;241m.[39mstop_rasterizing()

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/figure.py:3154[0m, in [0;36mFigure.draw[0;34m(self, renderer)[0m
[1;32m   3151[0m         [38;5;66;03m# ValueError can occur when resizing a window.[39;00m
[1;32m   3153[0m [38;5;28mself[39m[38;5;241m.[39mpatch[38;5;241m.[39mdraw(renderer)
[0;32m-> 3154[0m [43mmimage[49m[38;5;241;43m.[39;49m[43m_draw_list_compositing_images[49m[43m([49m
[1;32m   3155[0m [43m    [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43martists[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msuppressComposite[49m[43m)[49m
[1;32m   3157[0m [38;5;28;01mfor[39;00m sfig [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39msubfigs:
[1;32m   3158[0m     sfig[38;5;241m.[39mdraw(renderer)

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         [43ma[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axes/_base.py:3034[0m, in [0;36m_AxesBase.draw[0;34m(self, renderer)[0m
[1;32m   3031[0m     [38;5;28;01mfor[39;00m spine [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mspines[38;5;241m.[39mvalues():
[1;32m   3032[0m         artists[38;5;241m.[39mremove(spine)
[0;32m-> 3034[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_title_position[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   3036[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39maxison:
[1;32m   3037[0m     [38;5;28;01mfor[39;00m _axis [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_axis_map[38;5;241m.[39mvalues():

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axes/_base.py:2978[0m, in [0;36m_AxesBase._update_title_position[0;34m(self, renderer)[0m
[1;32m   2976[0m top [38;5;241m=[39m [38;5;28mmax[39m(top, bb[38;5;241m.[39mymax)
[1;32m   2977[0m [38;5;28;01mif[39;00m title[38;5;241m.[39mget_text():
[0;32m-> 2978[0m     [43max[49m[38;5;241;43m.[39;49m[43myaxis[49m[38;5;241;43m.[39;49m[43mget_tightbbox[49m[43m([49m[43mrenderer[49m[43m)[49m  [38;5;66;03m# update offsetText[39;00m
[1;32m   2979[0m     [38;5;28;01mif[39;00m ax[38;5;241m.[39myaxis[38;5;241m.[39moffsetText[38;5;241m.[39mget_text():
[1;32m   2980[0m         bb [38;5;241m=[39m ax[38;5;241m.[39myaxis[38;5;241m.[39moffsetText[38;5;241m.[39mget_tightbbox(renderer)

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axis.py:1336[0m, in [0;36mAxis.get_tightbbox[0;34m(self, renderer, for_layout_only)[0m
[1;32m   1333[0m     renderer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39m_get_renderer()
[1;32m   1334[0m ticks_to_draw [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_update_ticks()
[0;32m-> 1336[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_label_position[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   1338[0m [38;5;66;03m# go back to just this axis's tick labels[39;00m
[1;32m   1339[0m tlb1, tlb2 [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_ticklabel_bboxes(ticks_to_draw, renderer)

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axis.py:2609[0m, in [0;36mYAxis._update_label_position[0;34m(self, renderer)[0m
[1;32m   2605[0m     [38;5;28;01mreturn[39;00m
[1;32m   2607[0m [38;5;66;03m# get bounding boxes for this axis and any siblings[39;00m
[1;32m   2608[0m [38;5;66;03m# that have been set by `fig.align_ylabels()`[39;00m
[0;32m-> 2609[0m bboxes, bboxes2 [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_tick_boxes_siblings[49m[43m([49m[43mrenderer[49m[38;5;241;43m=[39;49m[43mrenderer[49m[43m)[49m
[1;32m   2610[0m x, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mlabel[38;5;241m.[39mget_position()
[1;32m   2611[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mlabel_position [38;5;241m==[39m [38;5;124m'[39m[38;5;124mleft[39m[38;5;124m'[39m:

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axis.py:2161[0m, in [0;36mAxis._get_tick_boxes_siblings[0;34m(self, renderer)[0m
[1;32m   2159[0m axis [38;5;241m=[39m ax[38;5;241m.[39m_axis_map[name]
[1;32m   2160[0m ticks_to_draw [38;5;241m=[39m axis[38;5;241m.[39m_update_ticks()
[0;32m-> 2161[0m tlb, tlb2 [38;5;241m=[39m [43maxis[49m[38;5;241;43m.[39;49m[43m_get_ticklabel_bboxes[49m[43m([49m[43mticks_to_draw[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m   2162[0m bboxes[38;5;241m.[39mextend(tlb)
[1;32m   2163[0m bboxes2[38;5;241m.[39mextend(tlb2)

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/axis.py:1315[0m, in [0;36mAxis._get_ticklabel_bboxes[0;34m(self, ticks, renderer)[0m
[1;32m   1313[0m [38;5;28;01mif[39;00m renderer [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1314[0m     renderer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39m_get_renderer()
[0;32m-> 1315[0m [38;5;28;01mreturn[39;00m ([[43mtick[49m[38;5;241;43m.[39;49m[43mlabel1[49m[38;5;241;43m.[39;49m[43mget_window_extent[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   1316[0m          [38;5;28;01mfor[39;00m tick [38;5;129;01min[39;00m ticks [38;5;28;01mif[39;00m tick[38;5;241m.[39mlabel1[38;5;241m.[39mget_visible()],
[1;32m   1317[0m         [tick[38;5;241m.[39mlabel2[38;5;241m.[39mget_window_extent(renderer)
[1;32m   1318[0m          [38;5;28;01mfor[39;00m tick [38;5;129;01min[39;00m ticks [38;5;28;01mif[39;00m tick[38;5;241m.[39mlabel2[38;5;241m.[39mget_visible()])

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/text.py:956[0m, in [0;36mText.get_window_extent[0;34m(self, renderer, dpi)[0m
[1;32m    951[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(
[1;32m    952[0m         [38;5;124m"[39m[38;5;124mCannot get window extent of text w/o renderer. You likely [39m[38;5;124m"[39m
[1;32m    953[0m         [38;5;124m"[39m[38;5;124mwant to call [39m[38;5;124m'[39m[38;5;124mfigure.draw_without_rendering()[39m[38;5;124m'[39m[38;5;124m first.[39m[38;5;124m"[39m)
[1;32m    955[0m [38;5;28;01mwith[39;00m cbook[38;5;241m.[39m_setattr_cm([38;5;28mself[39m[38;5;241m.[39mfigure, dpi[38;5;241m=[39mdpi):
[0;32m--> 956[0m     bbox, info, descent [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_layout[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_renderer[49m[43m)[49m
[1;32m    957[0m     x, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_unitless_position()
[1;32m    958[0m     x, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_transform()[38;5;241m.[39mtransform((x, y))

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/text.py:373[0m, in [0;36mText._get_layout[0;34m(self, renderer)[0m
[1;32m    370[0m ys [38;5;241m=[39m []
[1;32m    372[0m [38;5;66;03m# Full vertical extent of font, including ascenders and descenders:[39;00m
[0;32m--> 373[0m _, lp_h, lp_d [38;5;241m=[39m [43m_get_text_metrics_with_cache[49m[43m([49m
[1;32m    374[0m [43m    [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mlp[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fontproperties[49m[43m,[49m
[1;32m    375[0m [43m    [49m[43mismath[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mTeX[39;49m[38;5;124;43m"[39;49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_usetex[49m[43m([49m[43m)[49m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m [49m[43mdpi[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43mdpi[49m[43m)[49m
[1;32m    376[0m min_dy [38;5;241m=[39m (lp_h [38;5;241m-[39m lp_d) [38;5;241m*[39m [38;5;28mself[39m[38;5;241m.[39m_linespacing
[1;32m    378[0m [38;5;28;01mfor[39;00m i, line [38;5;129;01min[39;00m [38;5;28menumerate[39m(lines):

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/text.py:69[0m, in [0;36m_get_text_metrics_with_cache[0;34m(renderer, text, fontprop, ismath, dpi)[0m
[1;32m     66[0m [38;5;250m[39m[38;5;124;03m"""Call ``renderer.get_text_width_height_descent``, caching the results."""[39;00m
[1;32m     67[0m [38;5;66;03m# Cached based on a copy of fontprop so that later in-place mutations of[39;00m
[1;32m     68[0m [38;5;66;03m# the passed-in argument do not mess up the cache.[39;00m
[0;32m---> 69[0m [38;5;28;01mreturn[39;00m [43m_get_text_metrics_with_cache_impl[49m[43m([49m
[1;32m     70[0m [43m    [49m[43mweakref[49m[38;5;241;43m.[39;49m[43mref[49m[43m([49m[43mrenderer[49m[43m)[49m[43m,[49m[43m [49m[43mtext[49m[43m,[49m[43m [49m[43mfontprop[49m[38;5;241;43m.[39;49m[43mcopy[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mismath[49m[43m,[49m[43m [49m[43mdpi[49m[43m)[49m

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/text.py:77[0m, in [0;36m_get_text_metrics_with_cache_impl[0;34m(renderer_ref, text, fontprop, ismath, dpi)[0m
[1;32m     73[0m [38;5;129m@functools[39m[38;5;241m.[39mlru_cache([38;5;241m4096[39m)
[1;32m     74[0m [38;5;28;01mdef[39;00m [38;5;21m_get_text_metrics_with_cache_impl[39m(
[1;32m     75[0m         renderer_ref, text, fontprop, ismath, dpi):
[1;32m     76[0m     [38;5;66;03m# dpi is unused, but participates in cache invalidation (via the renderer).[39;00m
[0;32m---> 77[0m     [38;5;28;01mreturn[39;00m [43mrenderer_ref[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mget_text_width_height_descent[49m[43m([49m[43mtext[49m[43m,[49m[43m [49m[43mfontprop[49m[43m,[49m[43m [49m[43mismath[49m[43m)[49m

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/backends/backend_agg.py:220[0m, in [0;36mRendererAgg.get_text_width_height_descent[0;34m(self, s, prop, ismath)[0m
[1;32m    216[0m     ox, oy, width, height, descent, font_image [38;5;241m=[39m \
[1;32m    217[0m         [38;5;28mself[39m[38;5;241m.[39mmathtext_parser[38;5;241m.[39mparse(s, [38;5;28mself[39m[38;5;241m.[39mdpi, prop)
[1;32m    218[0m     [38;5;28;01mreturn[39;00m width, height, descent
[0;32m--> 220[0m font [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_prepare_font[49m[43m([49m[43mprop[49m[43m)[49m
[1;32m    221[0m font[38;5;241m.[39mset_text(s, [38;5;241m0.0[39m, flags[38;5;241m=[39mget_hinting_flag())
[1;32m    222[0m w, h [38;5;241m=[39m font[38;5;241m.[39mget_width_height()  [38;5;66;03m# width and height of unrotated string[39;00m

File [0;32m~/.micromamba/envs/cellnet/lib/python3.12/site-packages/matplotlib/backends/backend_agg.py:257[0m, in [0;36mRendererAgg._prepare_font[0;34m(self, font_prop)[0m
[1;32m    255[0m font[38;5;241m.[39mclear()
[1;32m    256[0m size [38;5;241m=[39m font_prop[38;5;241m.[39mget_size_in_points()
[0;32m--> 257[0m [43mfont[49m[38;5;241;43m.[39;49m[43mset_size[49m[43m([49m[43msize[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdpi[49m[43m)[49m
[1;32m    258[0m [38;5;28;01mreturn[39;00m font

[0;31mRuntimeError[0m: In set_size: Could not set the fontsize (invalid ppem value; error code 0x97)


> Notebook execution time (hhmmss) 000320
mv: cannot stat ‘./e9bf267a3.ipynb’: No such file or directory
> Saved to ./results/./cellnet/240502-123848-000320.ipynb
